[{"C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\index.js":"1","C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\reportWebVitals.js":"2","C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\App.jsx":"3","C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\components\\compounds\\Footer\\index.jsx":"4","C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\components\\elements\\Input\\index.jsx":"5","C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\components\\elements\\Card\\index.jsx":"6","C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\components\\Info\\index.jsx":"7","C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\components\\elements\\Button\\index.jsx":"8","C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\components\\compounds\\singleCharacter\\index.jsx":"9","C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\components\\compounds\\SideBar\\index.jsx":"10","C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\components\\elements\\SeachIcon\\index.jsx":"11","C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\components\\compounds\\Inputbar\\index.jsx":"12","C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\components\\compounds\\CSLsection-one\\index.jsx":"13","C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\components\\compounds\\Episode-section-two\\index.jsx":"14","C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\components\\compounds\\DeadCharacters-section-three\\index.jsx":"15","C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\pages\\Locations\\index.jsx":"16","C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\pages\\Characters\\index.jsx":"17","C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\pages\\Episodes\\index.jsx":"18","C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\components\\elements\\EpisodeCard\\index.jsx":"19","C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\components\\elements\\LocationCard\\index.jsx":"20","C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\Routers\\CharactersRoute\\charactersroutes.jsx":"21","C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\Routers\\EpisodeRoutes\\index.jsx":"22","C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\components\\compounds\\episodeCharacters\\index.jsx":"23","C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\pages\\ErrorPages\\notfound.jsx":"24","C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\Routers\\LocationsRoute\\index.jsx":"25","C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\components\\compounds\\locationCharacters\\index.jsx":"26","C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\components\\elements\\SeasonsCard\\index.jsx":"27","C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\components\\elements\\DCard\\index.jsx":"28"},{"size":598,"mtime":1608799764451,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":1606416311599,"results":"31","hashOfConfig":"30"},{"size":1584,"mtime":1610965417549,"results":"32","hashOfConfig":"30"},{"size":155,"mtime":1608795145731,"results":"33","hashOfConfig":"30"},{"size":258,"mtime":1608999665761,"results":"34","hashOfConfig":"30"},{"size":1283,"mtime":1610369709738,"results":"35","hashOfConfig":"30"},{"size":309,"mtime":1609293729983,"results":"36","hashOfConfig":"30"},{"size":196,"mtime":1609145604504,"results":"37","hashOfConfig":"30"},{"size":772,"mtime":1610368651368,"results":"38","hashOfConfig":"30"},{"size":696,"mtime":1609329744654,"results":"39","hashOfConfig":"30"},{"size":647,"mtime":1609335328125,"results":"40","hashOfConfig":"30"},{"size":598,"mtime":1609336464770,"results":"41","hashOfConfig":"30"},{"size":1004,"mtime":1610123878315,"results":"42","hashOfConfig":"30"},{"size":2547,"mtime":1611159525886,"results":"43","hashOfConfig":"30"},{"size":3276,"mtime":1611232640829,"results":"44","hashOfConfig":"30"},{"size":2614,"mtime":1610724193065,"results":"45","hashOfConfig":"30"},{"size":5261,"mtime":1610492912912,"results":"46","hashOfConfig":"30"},{"size":2603,"mtime":1610495537055,"results":"47","hashOfConfig":"30"},{"size":1443,"mtime":1610977776245,"results":"48","hashOfConfig":"30"},{"size":805,"mtime":1610724304233,"results":"49","hashOfConfig":"30"},{"size":506,"mtime":1610361592320,"results":"50","hashOfConfig":"30"},{"size":549,"mtime":1610478275748,"results":"51","hashOfConfig":"30"},{"size":1214,"mtime":1610716515525,"results":"52","hashOfConfig":"30"},{"size":167,"mtime":1610375073676,"results":"53","hashOfConfig":"30"},{"size":570,"mtime":1610723489355,"results":"54","hashOfConfig":"30"},{"size":491,"mtime":1610724748449,"results":"55","hashOfConfig":"30"},{"size":1368,"mtime":1611159762234,"results":"56","hashOfConfig":"30"},{"size":1016,"mtime":1611227172173,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"nu27fg",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\index.js",[],["123","124"],"C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\reportWebVitals.js",[],"C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\App.jsx",[],"C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\components\\compounds\\Footer\\index.jsx",[],["125","126"],"C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\components\\elements\\Input\\index.jsx",[],"C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\components\\elements\\Card\\index.jsx",[],"C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\components\\Info\\index.jsx",[],"C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\components\\elements\\Button\\index.jsx",[],["127","128"],"C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\components\\compounds\\singleCharacter\\index.jsx",[],"C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\components\\compounds\\SideBar\\index.jsx",[],"C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\components\\elements\\SeachIcon\\index.jsx",[],"C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\components\\compounds\\Inputbar\\index.jsx",[],"C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\components\\compounds\\CSLsection-one\\index.jsx",[],"C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\components\\compounds\\Episode-section-two\\index.jsx",["129","130","131"],"import React, {useState, useEffect} from 'react';\r\nimport Axios from 'axios'\r\nimport EpisodeCard from \"../../elements/EpisodeCard\";\r\nimport './episode.style.css'\r\nimport SeasonsCard from \"../../elements/SeasonsCard\";\r\n\r\nconst EpisodeSection = ({props}) => {\r\n    const [episodes, setEpisodes] = useState([])\r\n    // const [characters,setCharacters]= useState([])\r\n    const [pagination, setPagination] = useState({});\r\n\r\n    const mainURL = process.env.REACT_APP_BASE_URL\r\n\r\n    const requestEpisodes = (episodeLink = `${mainURL}/episode?page=2`) => {\r\n        // console.log({episodeLink})\r\n        Axios.get(episodeLink).then((response) => {\r\n            const {data, status} = response\r\n            console.log(data)\r\n            if (status === 200) {\r\n\r\n                setEpisodes(data.results)\r\n                setPagination(data.info)\r\n\r\n            }\r\n\r\n        })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        requestEpisodes();\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className={\"seasons-section\"}>\r\n            <div className={\"seasons-section_ep-box container\"}>\r\n                <h1>Latest Season</h1>\r\n                <div><h4>Season 4</h4></div>\r\n\r\n\r\n                <div\r\n                    className={\"seasons-section_episode-display-box\"}\r\n                >\r\n\r\n\r\n                    <div className={\"seasons-section_episode-display-box_seasons-container\"}>\r\n\r\n\r\n                        {\r\n                            episodes.length && episodes.map((el) => (\r\n                                <SeasonsCard\r\n                                    key={el.id}\r\n                                    id={el.id}\r\n                                    data={el}\r\n                                    name={el.name}\r\n                                    episode={el.episode}\r\n                                    created={el.created}\r\n                                    characters={el.characters}\r\n                                >\r\n                                    <ul>\r\n                                        <p><span>{el.episode}{el.name} </span></p>\r\n\r\n                                        <span>{new Date(el.created).toLocaleString()} </span>\r\n\r\n                                    </ul>\r\n\r\n\r\n                                </SeasonsCard>\r\n                            )).slice(17)\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EpisodeSection;","C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\components\\compounds\\DeadCharacters-section-three\\index.jsx",[],"C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\pages\\Locations\\index.jsx",["132","133","134"],"import React, {useState, useEffect} from 'react';\r\nimport Axios from \"axios\";\r\nimport './locations.style.css';\r\nimport Card from '../../components/elements/Card';\r\nimport LocationCard from \"../../components/elements/LocationCard\";\r\nimport {Button} from \"antd\";\r\nimport EpisodeCard from \"../../components/elements/EpisodeCard\";\r\n\r\nconst Locations = () => {\r\n    const [locs, setLocations] = useState([])\r\n    const [pagination, setPagination] = useState({});\r\n    const mainURL = process.env.REACT_APP_BASE_URL\r\n\r\n\r\n    const requestLocations = (links = `${mainURL}/location`) => {\r\n\r\n        console.log({links})\r\n\r\n        Axios.get(links)\r\n            .then((response) => {\r\n                console.log(response)\r\n                const {data, status} = response\r\n                if (status === 200) {\r\n                    setLocations(data.results)\r\n                    setPagination(data.info)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n    }\r\n    const navigation = (action) => {\r\n        switch (action) {\r\n            case \"next\":\r\n                pagination.next && requestLocations(pagination.next)\r\n                break;\r\n            case \"prev\":\r\n                pagination.prev && requestLocations(pagination.prev)\r\n                break;\r\n            default:\r\n                return\r\n        }\r\n\r\n    }\r\n\r\n\r\n    console.log({locs})\r\n    useEffect(() => {\r\n        requestLocations();\r\n    }, [])\r\n\r\n    return (\r\n        <div className={\"locations\"}>\r\n            <div className={\"locations_location-container\"}>\r\n                {\r\n                    locs.length && locs.map((el) => (\r\n                        <LocationCard\r\n                            key={el.id}\r\n                            id={el.id}\r\n                            data={el}\r\n                            name={el.name}\r\n                            episode={el.episode}\r\n                            created={el.created}\r\n                            residents={el.residents}\r\n\r\n                        >\r\n                            <ul>\r\n                                <li><span>{el.name}</span></li>\r\n                            </ul>\r\n\r\n                        </LocationCard>\r\n                    ))\r\n                }\r\n                <>\r\n                    <Button disabled={!pagination.prev} onClick={() => navigation('prev')}>Prev</Button>\r\n                    <Button disabled={!pagination.next} onClick={() => navigation('next')}>Next</Button>\r\n                </>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Locations;","C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\pages\\Characters\\index.jsx",["135"],"import React, {useEffect, useState} from 'react';\r\nimport Card from '../../components/elements/Card';\r\nimport './characters.style.css'\r\nimport Axios from \"axios\";\r\nimport {Button} from \"antd\";\r\nimport SingleCharacter from \"../../components/compounds/singleCharacter\";\r\n// import {Switch,Route} from \"react-router-dom\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport {FaGreaterThan, FaLessThan} from \"react-icons/all\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Characters = ({input}) => {\r\n\r\n    const [characters, setCharacters] = useState([])\r\n    const [filtered, setFiltered] = useState([])\r\n    const [pagination, setPagination] = useState({});\r\n    const [loading, setLoading] = useState(false);\r\n    console.log(filtered)\r\n    const mainURL = process.env.REACT_APP_BASE_URL\r\n    const page = withRouter(SingleCharacter)\r\n    /**\r\n     * Takes page number\r\n     * @param {string} link - page link\r\n     */\r\n    const requestCharacters = (link = `${mainURL}/character`) => {\r\n        console.log({link})\r\n        setLoading(true)\r\n        Axios.get(link)\r\n            .then((response) => {\r\n                setLoading(false)\r\n                const {data, status} = response\r\n                if (status === 200) {\r\n                    setCharacters(data.results);\r\n                    setPagination(data.info)\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                // setLoading(false)\r\n                console.log(err)\r\n            });\r\n    }\r\n    /**\r\n     * Navigates pages\r\n     * @param {'next' | 'prev'} action - takes 'next' or 'prev' actions\r\n     */\r\n    const navigation = (action) => {\r\n        switch (action) {\r\n            case \"next\":\r\n                pagination.next && requestCharacters(pagination.next)\r\n                break;\r\n            case \"prev\":\r\n                pagination.prev && requestCharacters(pagination.prev)\r\n                break;\r\n            default:\r\n                return\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        requestCharacters();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!input) {\r\n            setCharacters(characters)\r\n        } else {\r\n            const filteredCharacters = characters.filter(el => el.name.trim().toLowerCase().includes(input.trim().toLowerCase()))\r\n            setFiltered(filteredCharacters)\r\n        }\r\n\r\n        //eslint-disable-next-line\r\n    }, [input])\r\n\r\n\r\n    return (\r\n        <div className={'home'}>\r\n            <div className={\"home_home-content container\"}>\r\n                {loading ? <div style={{\r\n                        minHeight: '100vh',\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center'\r\n                    }}>\r\n                        loading...\r\n                    </div> :\r\n                    filtered.length ?\r\n                        filtered.map((el) => (\r\n                            <Card\r\n                                key={el.id}\r\n                                id={el.id}\r\n                                image={el.image}\r\n                                status={el.status}\r\n                                gender={el.gender}\r\n                                origin={el.origin.name}\r\n                                data={el}\r\n\r\n                            >\r\n                                <span className=\"card-meta_title\">{el.name}</span>\r\n                                <span className=\"card-meta_description\">\r\n                                        {new Date(el.created).toLocaleString()}\r\n                                </span>\r\n                            </Card>\r\n                        ))\r\n                        :\r\n                        characters.length ?\r\n                            characters.map((el) => (\r\n                                <Card\r\n                                    key={el.id}\r\n                                    id={el.id}\r\n                                    image={el.image}\r\n                                    status={el.status}\r\n                                    gender={el.gender}\r\n                                    origin={el.origin.name}\r\n                                    data={el}\r\n                                >\r\n                                    <span className=\"card-meta_title\">{el.name}</span>\r\n                                    <span className=\"card-meta_description\">\r\n                                        {new Date(el.created).toLocaleString()}\r\n                                    </span>\r\n                                </Card>\r\n                            ))\r\n                            :\r\n                            'no characters'\r\n                }\r\n            </div>\r\n            {/*<Switch>*/}\r\n            {/*<Route exact path={'/view-character'} component={SingleCharacter}/>*/}\r\n            {/*</Switch>*/}\r\n                   <>\r\n                        <Button className={'butn'} disabled={!pagination.prev} onClick={() => navigation('prev')}><FaLessThan/></Button>\r\n                        <Button className={'butn'} disabled={!pagination.next} onClick={() => navigation('next')}><FaGreaterThan/></Button>\r\n                    </>\r\n        </div>\r\n    )\r\n}\r\nexport default Characters;\r\n\r\n","C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\pages\\Episodes\\index.jsx",["136"],"import React, {useEffect, useState} from 'react';\r\nimport Axios from 'axios';\r\nimport './episodes.styles.css';\r\nimport {Button} from \"antd\";\r\nimport EpisodeCard from \"../../components/elements/EpisodeCard\";\r\n\r\n\r\n\r\nconst Episodes = (props) => {\r\n    const [episodes, setEpisodes] = useState([])\r\n    // const [characters,setCharacters]= useState([])\r\n    const [pagination, setPagination] = useState({});\r\n\r\n    const mainURL = process.env.REACT_APP_BASE_URL\r\n\r\n    const requestEpisodes = (episodeLink = `${mainURL}/episode`) => {\r\n     console.log({episodeLink})\r\n    Axios.get(episodeLink).then((response) =>{\r\n        const {data,status} = response\r\n        console.log(response)\r\n         if (status === 200) {\r\n             setEpisodes(data.results)\r\n             setPagination(data.info)\r\n         }\r\n    })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        })\r\n\r\n    }\r\n\r\nuseEffect(() => {\r\n    requestEpisodes();\r\n\r\n\r\n}, [])\r\n\r\n\r\n    // const check = (re,rc) => {\r\n    //     if (re.includes(rc)){\r\n    //         console.log(rc)\r\n    //     }\r\n    // }\r\n\r\n    const navigation = (action) => {\r\n        switch (action) {\r\n            case \"next\":\r\n                pagination.next && requestEpisodes(pagination.next)\r\n                break;\r\n            case \"prev\":\r\n                pagination.prev && requestEpisodes(pagination.prev)\r\n                break;\r\n            default:\r\n                return\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div className={\"episodes\"}>\r\n\r\n            <div className={\"episodes_episode-container\"}>\r\n\r\n            {\r\n                episodes.length && episodes.map((el) => (\r\n                    <EpisodeCard\r\n                        key={el.id}\r\n                        id={el.id}\r\n                        data={el}\r\n                        name={el.name}\r\n                        episode={el.episode}\r\n                        created={el.created}\r\n                        characters={el.characters}\r\n                    >\r\n                        <ul>\r\n                            <p><span>{el.episode}{el.name} </span></p>\r\n\r\n                            <span>{new Date(el.created).toLocaleString()} </span>\r\n\r\n                        </ul>\r\n\r\n\r\n\r\n                    </EpisodeCard>\r\n                ))\r\n            }\r\n            </div>\r\n            <>\r\n                <Button disabled={!pagination.prev} onClick={() => navigation('prev')}>Prev</Button>\r\n                <Button disabled={!pagination.next} onClick={() => navigation('next')}>Next</Button>\r\n            </>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Episodes;","C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\components\\elements\\EpisodeCard\\index.jsx",["137","138"],"import React, {useState} from 'react';\r\nimport './episodecard.style.css'\r\nimport { useHistory } from 'react-router-dom'\r\nimport EpisodeCharacters from \"../../compounds/episodeCharacters\";\r\n\r\nconst EpisodeCard = ({children,id,characters}) => {\r\n    const history = useHistory()\r\n\r\n\r\n    let loopedCharacters =   Array.from(characters).map((el,id) => (\r\n        <img key={id}\r\n             src={el.replace(\"character\", \"character/avatar\") + \".jpeg\"} style={{width: 250, height: 250 }}  alt={\"\"}/>\r\n    ))\r\n\r\n    const handleClick = () => {\r\n     history.push(\"/episodes/episode-characters\",{ characters, id})\r\n    }\r\n\r\n    console.log(characters)\r\n    // const dataa = (loopedCharacters)\r\n    // console.log(loopedCharacters.length)\r\n    let randomEmages = Math.floor(Math.random() * loopedCharacters.length ) + 1\r\n\r\n\r\n\r\n    return (\r\n        <div className={'ep-card'} key={id}>\r\n            <div onClick={handleClick}>\r\n                {/*{*/}\r\n                {/*    Array.from(characters).map((el,id) => (*/}\r\n                {/*        <img key={id}*/}\r\n                {/*             src={el.replace(\"character\", \"character/avatar\") + \".jpeg\"} style={{width: emagewidth }}  alt={\"\"}/>*/}\r\n                {/*    ))*/}\r\n                {/*}*/}\r\n                {loopedCharacters[randomEmages]}\r\n            </div>\r\n            <div>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EpisodeCard;","C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\components\\elements\\LocationCard\\index.jsx",[],"C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\Routers\\CharactersRoute\\charactersroutes.jsx",[],"C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\Routers\\EpisodeRoutes\\index.jsx",[],"C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\components\\compounds\\episodeCharacters\\index.jsx",[],"C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\pages\\ErrorPages\\notfound.jsx",[],"C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\Routers\\LocationsRoute\\index.jsx",[],"C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\components\\compounds\\locationCharacters\\index.jsx",["139"],"import React from 'react';\r\n\r\nconst LocationCharacters = (props) => {\r\n    const {location:{state:{residents:loopedCharacters,id}}} = props\r\n\r\n    let loopCharacters = Array.from(loopedCharacters).map((el,id) => (\r\n        <img key={id}\r\n             src={el.replace(\"character\", \"character/avatar\") + \".jpeg\"} style={{width: 150, height: 150}}  alt={\"\"}/>\r\n    ))\r\n    return (\r\n        <div>\r\n\r\n            {loopCharacters}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LocationCharacters;","C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\components\\elements\\SeasonsCard\\index.jsx",[],"C:\\Users\\GIFT DAVID\\Desktop\\Rick_Morty\\rick-and-morty\\src\\components\\elements\\DCard\\index.jsx",[],{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"140","replacedBy":"144"},{"ruleId":"142","replacedBy":"145"},{"ruleId":"140","replacedBy":"146"},{"ruleId":"142","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":3,"column":8,"nodeType":"150","messageId":"151","endLine":3,"endColumn":19},{"ruleId":"148","severity":1,"message":"152","line":10,"column":12,"nodeType":"150","messageId":"151","endLine":10,"endColumn":22},{"ruleId":"153","severity":1,"message":"154","line":35,"column":8,"nodeType":"155","endLine":35,"endColumn":10,"suggestions":"156"},{"ruleId":"148","severity":1,"message":"157","line":4,"column":8,"nodeType":"150","messageId":"151","endLine":4,"endColumn":12},{"ruleId":"148","severity":1,"message":"149","line":7,"column":8,"nodeType":"150","messageId":"151","endLine":7,"endColumn":19},{"ruleId":"153","severity":1,"message":"158","line":50,"column":8,"nodeType":"155","endLine":50,"endColumn":10,"suggestions":"159"},{"ruleId":"148","severity":1,"message":"160","line":24,"column":11,"nodeType":"150","messageId":"151","endLine":24,"endColumn":15},{"ruleId":"153","severity":1,"message":"154","line":36,"column":4,"nodeType":"155","endLine":36,"endColumn":6,"suggestions":"161"},{"ruleId":"148","severity":1,"message":"162","line":1,"column":16,"nodeType":"150","messageId":"151","endLine":1,"endColumn":24},{"ruleId":"148","severity":1,"message":"163","line":4,"column":8,"nodeType":"150","messageId":"151","endLine":4,"endColumn":25},{"ruleId":"148","severity":1,"message":"164","line":4,"column":56,"nodeType":"150","messageId":"151","endLine":4,"endColumn":58},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],["165"],["166"],["165"],["166"],"no-unused-vars","'EpisodeCard' is defined but never used.","Identifier","unusedVar","'pagination' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'requestEpisodes'. Either include it or remove the dependency array.","ArrayExpression",["167"],"'Card' is defined but never used.","React Hook useEffect has a missing dependency: 'requestLocations'. Either include it or remove the dependency array.",["168"],"'page' is assigned a value but never used.",["169"],"'useState' is defined but never used.","'EpisodeCharacters' is defined but never used.","'id' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},{"desc":"170","fix":"174"},"Update the dependencies array to be: [requestEpisodes]",{"range":"175","text":"176"},"Update the dependencies array to be: [requestLocations]",{"range":"177","text":"178"},{"range":"179","text":"176"},[1028,1030],"[requestEpisodes]",[1484,1486],"[requestLocations]",[949,951]]